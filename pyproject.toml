[tool.poetry]
name = "qiko-graph"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
preview = true
select = [
    "B", # flake8-bugbear rules
    "C4", # flake8-comprehensions
    "E", # pycodestyle E rules
    "F", # pyflakes rules
    "FURB", # refurb rules
    "I", # isort rules
    "N", # pep8-naming
    "PT", # flake8-pytest-style rules
    "PLC0208", # iteration-over-set
    "PLC2801", # unnecessary-dunder-call
    "PLC0414", # useless-import-alias
    "PLR0402", # manual-from-import
    "PLR1711", # useless-return
    "PLR1714", # repeated-equality-comparison
    "RUF013", # implicit-optional
    "RUF019", # unnecessary-key-check
    "RUF100", # unused-noqa
    "RUF101", # redirected-noqa
    "S506", # unsafe-yaml-load
    "SIM", # flake8-simplify rules
    "TRY400", # error-instead-of-exception
    "UP", # pyupgrade rules
    "W191", # tab-indentation
    "W605", # invalid-escape-sequence
]
ignore = [
    "E402", # module-import-not-at-top-of-file
    "E711", # none-comparison
    "E712", # true-false-comparison
    "E721", # type-comparison
    "E722", # bare-except
    "E731", # lambda-assignment
    "F821", # undefined-name
    "F841", # unused-variable
    "FURB113", # repeated-append
    "FURB152", # math-constant
    "UP007", # non-pep604-annotation
    "UP032", # f-string
    "B005", # strip-with-multi-characters
    "B006", # mutable-argument-default
    "B007", # unused-loop-control-variable
    "B026", # star-arg-unpacking-after-keyword-arg
    "B904", # raise-without-from-inside-except
    "B905", # zip-without-explicit-strict
    "N806", # non-lowercase-variable-in-function
    "N815", # mixed-case-variable-in-class-scope
    "PT011", # pytest-raises-too-broad
    "SIM102", # collapsible-if
    "SIM103", # needless-bool
    "SIM105", # suppressible-exception
    "SIM107", # return-in-try-except-finally
    "SIM108", # if-else-block-instead-of-if-exp
    "SIM113", # eumerate-for-loop
    "SIM117", # multiple-with-statements
    "SIM210", # if-expr-with-true-false
    "SIM300", # yoda-conditions,
]

[tool.ruff.lint.per-file-ignores]
"app.py" = [
]
"__init__.py" = [
    "F401", # unused-import
    "F811", # redefined-while-unused
]
"configs/*" = [
    "N802", # invalid-function-name
]
"libs/gmpy2_pkcs10aep_cipher.py" = [
    "N803", # invalid-argument-name
]
"tests/*" = [
    "F811", # redefined-while-unused
    "F401", # unused-import
]

[tool.ruff.lint.pyflakes]
extend-generics = [
    "_pytest.monkeypatch",
    "tests.integration_tests",
]

[tool.ruff.format]
exclude = [
]

############################################################
# [ Main ] Dependency group
############################################################

[tool.poetry.dependencies]
python = "^3.11"
langgraph = "^0.2.45"
langsmith = "^0.1.142"
langchain-core = "^0.3.15"
langchain-openai = "^0.2.6"
langchain-community = "^0.3.5"
zhipuai = "^2.1.5.20230904"
fastapi = { extras = ["standard"], version = "^0.115.6" }
python-socketio = "5.11.1"

############################################################
# [ Dev ] dependency group
# Required for development and running tests
############################################################

[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
coverage = "~7.2.4"
pytest = "~8.3.2"
pytest-benchmark = "~4.0.0"
pytest-env = "~1.1.3"
pytest-mock = "~3.14.0"

############################################################
# [ Lint ] dependency group
# Required for code style linting
############################################################
[tool.poetry.group.lint]
optional = true
[tool.poetry.group.lint.dependencies]
dotenv-linter = "~0.5.0"
ruff = "~0.8.1"

